16/9/2022
2h Creating User stories and tasks, 45min Supervision and 2h of coding and GUI developing = 4h 45min

what do I want to understand better?

During this week I have been trying to integrate Android Studio with GitHub. I already understand the Git concept and how it works, but I habe been having trouble with
pushing the code to the repository. I want this to work so that I can share my work with my project members, and so they can download the project aswell and eventually
start working on it aswell. So far, we have our own project files that we work on until we get Git working with our IDE. To make this happen, next week, I'm gonna ask
our supervisors for help with pushing to GitHub using Android Studio. If I still don't get it to work, I will have to make some more research on the subject.

how can I help someone else, or the entire team, to learn something new?
During this week, I feel like I have been learning a lot of new stuff regarding programming in Android Studio. Some of the stuff I have been coding has been based on my
previous knowledge of programming in Java, and some is from a lot of googling and reading some API. I have saved most of the stuff I have read about, and some stuff that
I have read about you could probably use again at some point in the project. To help the team learn something new, I'm going to share the resources and also do my best to
explain some of the code that I have implemented if anyone in my team asks for it. This way everyone in the team can get familiar with the different tools that exists in
Android Studio but not in regular Java.


what is my contribution towards the team's use of Scrum?

I attended this weeks meetings where we discussed our goals for the week (in the beginning). At the end of the week, I also looked through the tasks and user stories,
which ones we have completed and which ones we should work on the coming week. I am quite happy with the current situation. If there was something I would like to change
or improve in the upcoming weeks it would be to think about what our "Definition of done" will be. This is something that is almost done within the team, but something
we will have to add more stuff into.

what is my contribution towards the team's deliveries?

This week, I have been working on developing a GUI for the app. While I was building the GUI, I found out that I really wanted to test out some of the features that are
included in our tasks. So beside working on the GUI, I also implemented some logic in form of Java code into the application so that some of the features we want in the
app is already there. This is exactly how I want it to be. Not only did I do the task I assigned myself this week, I also decided to play around with the IDE and
implement some code to test all the components in the app. Of course everything did not work correctly at first, but that's how I learn programming the fastest way
(to fail and then trying to fix the incorrect code). If there is something to improve from this, it would be to do more research about the IDE and expose myself for more
coding challenges on the way on building the app.